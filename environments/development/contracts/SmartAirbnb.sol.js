// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":true,"inputs":[],"name":"kickback","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"platform","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[{"name":"amount","type":"uint256"}],"name":"AddPremium","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"FindBug","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"addr","type":"address"}],"name":"getBalanceInEth","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[],"name":"AddPlatform","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"receiver","type":"address"},{"name":"amount","type":"uint256"}],"name":"sendCoin","outputs":[{"name":"sufficient","type":"bool"}],"type":"function"},{"constant":true,"inputs":[],"name":"guest","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"price","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[],"name":"NoWifi","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"deposit","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"amount","type":"uint256"}],"name":"Reserve","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"premium","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"host","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":false,"inputs":[],"name":"LeaveRoom","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"addr","type":"address"}],"name":"getBalance","outputs":[{"name":"","type":"uint256"}],"type":"function"}],
    binary: "6060604052600160a060020a033216600090815260208190526040902061271090556103878061002f6000396000f3606060405236156100c45760e060020a600035046349eb2e6681146100c65780634bde38c8146100cf5780636cf84fe1146100e15780637502bd93146101145780637bd703e81461013b5780637f5097021461016657806390b98a111461017e5780639a04f704146101ae578063a035b1fe146101c0578063aff0cb3c146101c9578063d0e30db0146101f4578063db7b64a8146101fd578063e0a73a9314610230578063f437bc5914610239578063f6ef7c091461024b578063f8b2cb4f14610263575b005b61028960075481565b61029b600454600160a060020a031681565b6100c460043560038054600160a060020a03191633179055600281905560045461033590600160a060020a031682610188565b6100c460028054600154600780549190920192909204918201905560068054919091039055565b6102896004356000732e0dd9d18f8edf4e8236fb4d73b241bd6e40ac086396e4ee3d6102f08461026a565b6100c460048054600160a060020a031916331790555b565b6102896004356024355b33600160a060020a0316600090815260208190526040812054829010156102b8576102ea565b61029b600354600160a060020a031681565b61028960015481565b6100c460025460015460078054600a9290930160030291909104918201905560068054919091039055565b61028960065481565b6100c460043560038054600160a060020a03191633179055600181905560045461033590600160a060020a031682610188565b61028960025481565b61029b600554600160a060020a031681565b6100c460045461033990600160a060020a031661026a565b6102896004355b600160a060020a0381166000908152602081905260409020545b919050565b60408051918252519081900360200190f35b60408051600160a060020a03929092168252519081900360200190f35b5033600160a060020a039081166000908152602081905260408082208054859003905591841681522080548201905560015b92915050565b60026040518360e060020a02815260040180838152602001828152602001925050506020604051808303818660325a03f4156100025750506040515191506102849050565b5050565b6006546007540114156103625760065460055461036791600160a060020a039190911690610188565b610002565b5060035460075461038191600160a060020a031690610188565b5061017c56",
    unlinked_binary: "6060604052600160a060020a033216600090815260208190526040902061271090556103878061002f6000396000f3606060405236156100c45760e060020a600035046349eb2e6681146100c65780634bde38c8146100cf5780636cf84fe1146100e15780637502bd93146101145780637bd703e81461013b5780637f5097021461016657806390b98a111461017e5780639a04f704146101ae578063a035b1fe146101c0578063aff0cb3c146101c9578063d0e30db0146101f4578063db7b64a8146101fd578063e0a73a9314610230578063f437bc5914610239578063f6ef7c091461024b578063f8b2cb4f14610263575b005b61028960075481565b61029b600454600160a060020a031681565b6100c460043560038054600160a060020a03191633179055600281905560045461033590600160a060020a031682610188565b6100c460028054600154600780549190920192909204918201905560068054919091039055565b610289600435600073__ConvertLib____________________________6396e4ee3d6102f08461026a565b6100c460048054600160a060020a031916331790555b565b6102896004356024355b33600160a060020a0316600090815260208190526040812054829010156102b8576102ea565b61029b600354600160a060020a031681565b61028960015481565b6100c460025460015460078054600a9290930160030291909104918201905560068054919091039055565b61028960065481565b6100c460043560038054600160a060020a03191633179055600181905560045461033590600160a060020a031682610188565b61028960025481565b61029b600554600160a060020a031681565b6100c460045461033990600160a060020a031661026a565b6102896004355b600160a060020a0381166000908152602081905260409020545b919050565b60408051918252519081900360200190f35b60408051600160a060020a03929092168252519081900360200190f35b5033600160a060020a039081166000908152602081905260408082208054859003905591841681522080548201905560015b92915050565b60026040518360e060020a02815260040180838152602001828152602001925050506020604051808303818660325a03f4156100025750506040515191506102849050565b5050565b6006546007540114156103625760065460055461036791600160a060020a039190911690610188565b610002565b5060035460075461038191600160a060020a031690610188565b5061017c56",
    address: "0x8547c5719d9db06e72dca7f15939e51101e2d96c",
    generated_with: "2.0.6",
    contract_name: "SmartAirbnb"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("SmartAirbnb error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("SmartAirbnb error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("SmartAirbnb error: lease call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("SmartAirbnb error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.SmartAirbnb = Contract;
  }

})();
